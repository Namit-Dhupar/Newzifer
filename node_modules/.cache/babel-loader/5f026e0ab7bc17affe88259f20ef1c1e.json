{"ast":null,"code":"var _jsxFileName = \"/home/namit/React Projects/wizikey-assignment/src/components/ListSection/List.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Card, Feed, Loader, Image } from 'semantic-ui-react';\nimport classes from './List.module.css';\nimport * as actionCreators from '../../store/actions';\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nclass List extends Component {\n  render() {\n    console.log(this.props.dailyFavorite);\n    let newsList = null;\n    let sourcename = null;\n\n    if (this.props.dailySourceLoading) {\n      newsList = /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.loader,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Loader, {\n        size: \"large\",\n        active: true,\n        inline: \"centered\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 51\n        }\n      }));\n      sourcename = /*#__PURE__*/React.createElement(Loader, {\n        size: \"medium\",\n        active: true,\n        inline: \"centered\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }\n      });\n    }\n\n    if (!this.props.dailySourceLoading) {\n      // eslint-disable-next-line\n      newsList = this.props.dailySource.map((source, index) => {\n        if (source.source.id === this.props.dailyListID) {\n          return /*#__PURE__*/React.createElement(Feed.Event, {\n            key: index,\n            className: classes.feed,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(Image, {\n            src: source.urlToImage ? source.urlToImage : \"https://st2.depositphotos.com/1031343/6019/v/450/depositphotos_60193257-stock-illustration-news-flash-stamp.jpg\",\n            size: \"tiny\",\n            inline: true,\n            className: classes.thumbnail,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 11\n            }\n          }), /*#__PURE__*/React.createElement(Feed.Content, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: classes.date,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(Feed.Date, {\n            content: new Date(source.publishedAt).toDateString(),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 13\n            }\n          })), /*#__PURE__*/React.createElement(\"div\", {\n            className: classes.star,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(\"span\", {\n            className: \"fa fa-star\",\n            onClick: () => {\n              this.props.onToggleFavorite(source.url);\n              this.props.onAddFavorite(source.url, source.urlToImage, new Date(source.publishedAt).toDateString(), source.title, source.description);\n              this.props.onToggleFavorite(source.url);\n            },\n            style: {\n              color: source.isFav ? 'red' : ''\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 13\n            }\n          })), /*#__PURE__*/React.createElement(Feed.Summary, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: classes.List,\n            onClick: () => {\n              this.props.onPostTitle(source.title);\n              this.props.onPostImage(source.urlToImage);\n              this.props.onPostDescription(source.description);\n              this.props.onPostDate(new Date(source.publishedAt).toDateString());\n              this.props.onPostReadMore(source.url);\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 13\n            }\n          }, source.title))));\n        }\n      }); //Extract the News Source Name\n\n      sourcename = this.props.dailySource.splice(1).slice(0, 1).map(sn => sn.source.id === this.props.dailyListID ? Object.values(sn.source).splice(1) : '');\n    }\n\n    if (!this.props.dailyListID) {\n      newsList = /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.mount,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 16\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 16\n        }\n      }, \"Click on any News Source\"));\n    }\n\n    return /*#__PURE__*/React.createElement(Card, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(Card.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.sourcehead,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 8\n      }\n    }, sourcename))), /*#__PURE__*/React.createElement(Card.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(InfiniteScroll, {\n      dataLength: this.props.dailySource.length,\n      style: {\n        height: \"67.5vh\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Feed, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }, newsList))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    dailySource: state.list.newsItem,\n    dailySourceLoading: state.list.newsloading,\n    dailyListID: state.source.id,\n    dailyFavorite: state.favorite.isFav\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onPostTitle: title => dispatch(actionCreators.getTitle(title)),\n    onPostImage: image => dispatch(actionCreators.getImageURL(image)),\n    onPostDescription: desc => dispatch(actionCreators.getDescription(desc)),\n    onPostDate: date => dispatch(actionCreators.getDate(date)),\n    onPostReadMore: url => dispatch(actionCreators.getURL(url)),\n    onAddFavorite: (url, image, date, title, desc) => dispatch(actionCreators.addfavorite(url, image, date, title, desc)),\n    onToggleFavorite: url => dispatch(actionCreators.togglefavorite(url))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(List);","map":{"version":3,"sources":["/home/namit/React Projects/wizikey-assignment/src/components/ListSection/List.js"],"names":["React","Component","connect","Card","Feed","Loader","Image","classes","actionCreators","InfiniteScroll","List","render","console","log","props","dailyFavorite","newsList","sourcename","dailySourceLoading","loader","dailySource","map","source","index","id","dailyListID","feed","urlToImage","thumbnail","date","Date","publishedAt","toDateString","star","onToggleFavorite","url","onAddFavorite","title","description","color","isFav","onPostTitle","onPostImage","onPostDescription","onPostDate","onPostReadMore","splice","slice","sn","Object","values","mount","sourcehead","length","height","mapStateToProps","state","list","newsItem","newsloading","favorite","mapDispatchToProps","dispatch","getTitle","image","getImageURL","desc","getDescription","getDate","getURL","addfavorite","togglefavorite"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Card, Feed, Loader, Image } from 'semantic-ui-react';\nimport classes from './List.module.css';\nimport * as actionCreators from '../../store/actions';\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\n\nclass List extends Component{\n\n render(){\n    console.log(this.props.dailyFavorite);\n     let newsList = null;\n     let sourcename = null;\n     if(this.props.dailySourceLoading){\n       newsList = <div className={classes.loader}><Loader size='large' active inline='centered' /></div>;\n       sourcename = <Loader size='medium' active inline='centered' />;\n     }\n     if(!this.props.dailySourceLoading){\n       // eslint-disable-next-line\n       newsList = ( this.props.dailySource.map((source,index) =>{\n         if(source.source.id === this.props.dailyListID){\n         return(\n          <Feed.Event key={index} className={classes.feed}>\n          <Image src={(source.urlToImage) ? \n            source.urlToImage : \n          \"https://st2.depositphotos.com/1031343/6019/v/450/depositphotos_60193257-stock-illustration-news-flash-stamp.jpg\"} \n          size='tiny' inline={true} className={classes.thumbnail}/>\n          <Feed.Content>\n            <div className={classes.date}>\n            <Feed.Date content={new Date(source.publishedAt).toDateString()} />\n            </div>\n            <div className={classes.star}>\n            <span className=\"fa fa-star\" onClick={()=>{\n             this.props.onToggleFavorite(source.url)\n             this.props.onAddFavorite(source.url,\n             source.urlToImage, \n             new Date(source.publishedAt).toDateString(),\n             source.title,\n             source.description\n             );\n             this.props.onToggleFavorite(source.url) }}\n             style={{ color: (source.isFav)? 'red' : '' }}></span>\n            </div>\n            <Feed.Summary>\n            <div className={classes.List} onClick={()=>{\n            this.props.onPostTitle(source.title);\n            this.props.onPostImage(source.urlToImage);\n            this.props.onPostDescription(source.description);\n            this.props.onPostDate(new Date(source.publishedAt).toDateString());\n            this.props.onPostReadMore(source.url);}}>\n            {source.title}\n            </div>\n            </Feed.Summary>\n          </Feed.Content>\n        </Feed.Event>\n        ) \n       }\n       }\n       ))\n       //Extract the News Source Name\n       sourcename = (this.props.dailySource.splice(1).slice(0,1).map((\n        sn => (sn.source.id === this.props.dailyListID) ? (Object.values(sn.source).splice(1)): ''))\n        );\n     }\n     if(!this.props.dailyListID)\n     {\n     newsList= <div className={classes.mount}>\n               <h3>Click on any News Source</h3>\n               </div>\n     }\n\n    return(\n  <Card fluid>\n    <Card.Content>\n      <Card.Header>\n       <div className={classes.sourcehead}>\n         {sourcename}\n       </div> \n      </Card.Header>\n    </Card.Content>\n    <Card.Content>\n    <InfiniteScroll dataLength={this.props.dailySource.length} style={{height: \"67.5vh\" }}>\n      <Feed>\n      {newsList}\n      </Feed>\n      </InfiniteScroll>\n    </Card.Content>\n  </Card>\n    )}\n}\n\nconst mapStateToProps = state =>{\n  return{\n    dailySource: state.list.newsItem,\n    dailySourceLoading: state.list.newsloading,\n    dailyListID: state.source.id,\n    dailyFavorite: state.favorite.isFav\n  }\n}\n\nconst mapDispatchToProps = dispatch =>{\n  return{\n    onPostTitle: (title) => dispatch(actionCreators.getTitle(title)),\n    onPostImage: (image) => dispatch(actionCreators.getImageURL(image)),\n    onPostDescription: (desc) => dispatch(actionCreators.getDescription(desc)),\n    onPostDate: (date) => dispatch(actionCreators.getDate(date)),\n    onPostReadMore: (url) => dispatch(actionCreators.getURL(url)),\n    onAddFavorite: (url,image,date,title,desc) => dispatch(actionCreators.addfavorite(url,image,date,title,desc)),\n    onToggleFavorite: (url) => dispatch(actionCreators.togglefavorite(url))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(List);"]},"metadata":{},"sourceType":"module"}