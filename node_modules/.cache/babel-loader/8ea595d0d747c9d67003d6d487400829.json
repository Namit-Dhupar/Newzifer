{"ast":null,"code":"import axios from 'axios';\n/*****************************COMPONENT: SOURCES.JS*****************************/\n\nexport const GET_SOURCE = 'GET_SOURCE';\nexport const FETCH_SOURCE_REQUEST = 'FETCH_SOURCE_REQUEST';\nexport const FETCH_SOURCE_SUCCESS = 'FETCH_SOURCE_SUCCESS';\nexport const FETCH_SOURCE_FAILURE = 'FETCH_SOURCE_FAILURE';\nexport const SEARCH_SOURCE = 'SEARCH_SOURCE'; //Action Creators are useful for Asynchronous Code\n//Thunk allows to return a function instead of action form an action creator\n//Thunk is essential for making Async function calls in a React-Redux App\n\nexport const searchsource = searchterm => {\n  return {\n    type: SEARCH_SOURCE,\n    payload: searchterm\n  };\n};\nexport const fetchSourceRequest = () => {\n  return {\n    type: FETCH_SOURCE_REQUEST\n  };\n};\nexport const fetchSourceSuccess = sources => {\n  return {\n    type: FETCH_SOURCE_SUCCESS,\n    payload: sources\n  };\n};\nexport const fetchSourceError = err => {\n  return {\n    type: FETCH_SOURCE_FAILURE,\n    payload: err\n  };\n};\nexport const getsource = () => {\n  return dispatch => {\n    dispatch(fetchSourceRequest()); //Will set loading to true\n\n    axios.get('https://newsapi.org/v2/sources?apiKey=d52cd4ddccbc429e937e35cd9af2337e').then(response => {\n      dispatch(fetchSourceSuccess(response.data.sources));\n    }).catch(err => {\n      dispatch(fetchSourceError(err.message));\n    });\n  };\n};\n/***************************************************************************************/\n\n/**********************************COMPONENT: LIST.JS***********************************/\n\nexport const GET_NEWS = 'GET_NEWS';\nexport const FETCH_NEWS_REQUEST = 'FETCH_NEWS_REQUEST';\nexport const FETCH_NEWS_SUCCESS = 'FETCH_NEWS_SUCCESS';\nexport const FETCH_NEWS_FAILURE = 'FETCH_NEWS_FAILURE';\nexport const ADD_LIKED_BOOLEAN = 'ADD_LIKED_BOOLEAN';\nexport const GET_SOURCE_ID = 'GET_SOURCE_ID';\nexport const GET_NEWS_TITLE = 'GET_NEWS_TITLE';\nexport const GET_NEWS_DESCRIPTION = 'GET_NEWS_DESCRIPTION';\nexport const GET_NEWS_IMAGE = 'GET_NEWS_IMAGE';\nexport const GET_NEWS_DATE = 'GET_NEWS_DATE';\nexport const GET_NEWS_URL = 'GET_NEWS_URL';\nexport const getTitle = title => {\n  return {\n    type: GET_NEWS_TITLE,\n    payload: title\n  };\n};\nexport const getDescription = desc => {\n  return {\n    type: GET_NEWS_DESCRIPTION,\n    payload: desc\n  };\n};\nexport const getImageURL = image => {\n  return {\n    type: GET_NEWS_IMAGE,\n    payload: image\n  };\n};\nexport const getDate = date => {\n  return {\n    type: GET_NEWS_DATE,\n    payload: date\n  };\n};\nexport const getURL = url => {\n  return {\n    type: GET_NEWS_URL,\n    payload: url\n  };\n};\nexport const listsourceid = id => {\n  return {\n    type: GET_SOURCE_ID,\n    listid: id\n  };\n};\nexport const fetchNewsRequest = () => {\n  return {\n    type: FETCH_NEWS_REQUEST\n  };\n};\nexport const fetchNewsSuccess = news => {\n  return {\n    type: FETCH_NEWS_SUCCESS,\n    payload: news\n  };\n};\nexport const addliked = () => {\n  return {\n    type: ADD_LIKED_BOOLEAN\n  };\n};\nexport const fetchNewsError = err => {\n  return {\n    type: FETCH_NEWS_FAILURE,\n    payload: err\n  };\n};\nexport const getnews = id => {\n  return dispatch => {\n    dispatch(fetchNewsRequest()); //Will set loading to true\n\n    axios.get('https://newsapi.org/v2/everything?sources=' + id + '&apiKey=d52cd4ddccbc429e937e35cd9af2337e').then(response => {\n      dispatch(fetchNewsSuccess(response.data.articles), addliked());\n    }).catch(err => {\n      dispatch(fetchNewsError(err.message));\n    });\n  };\n};\n/***************************************************************************************/\n\n/**********************************COMPONENT: FAVORITE.JS***********************************/\n\nexport const TOGGLE_FAVORITE = 'TOGGLE_FAVORITE';\nexport const ADD_NEW_FAVORITE = 'ADD_NEW_FAVORITE';\nexport const addfavorite = (url, image, date, title, desc) => {\n  return {\n    type: ADD_NEW_FAVORITE,\n    payload: {\n      favurl: url,\n      favimage: image,\n      favdate: date,\n      favtitle: title,\n      favdesc: desc\n    }\n  };\n};\nexport const togglefavorite = url => {\n  return {\n    type: TOGGLE_FAVORITE,\n    payload: url\n  };\n}; // export const getallfavorites = () =>{\n//     return{\n//         type: GET_ALL_FAVORITES\n//     }\n// }\n// export const getfavorite = () =>{\n//     return dispatch  => {\n//         dispatch(getallfavorites());\n//     }\n// }","map":{"version":3,"sources":["/home/namit/React Projects/wizikey-assignment/src/store/actions.js"],"names":["axios","GET_SOURCE","FETCH_SOURCE_REQUEST","FETCH_SOURCE_SUCCESS","FETCH_SOURCE_FAILURE","SEARCH_SOURCE","searchsource","searchterm","type","payload","fetchSourceRequest","fetchSourceSuccess","sources","fetchSourceError","err","getsource","dispatch","get","then","response","data","catch","message","GET_NEWS","FETCH_NEWS_REQUEST","FETCH_NEWS_SUCCESS","FETCH_NEWS_FAILURE","ADD_LIKED_BOOLEAN","GET_SOURCE_ID","GET_NEWS_TITLE","GET_NEWS_DESCRIPTION","GET_NEWS_IMAGE","GET_NEWS_DATE","GET_NEWS_URL","getTitle","title","getDescription","desc","getImageURL","image","getDate","date","getURL","url","listsourceid","id","listid","fetchNewsRequest","fetchNewsSuccess","news","addliked","fetchNewsError","getnews","articles","TOGGLE_FAVORITE","ADD_NEW_FAVORITE","addfavorite","favurl","favimage","favdate","favtitle","favdesc","togglefavorite"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\n\n/*****************************COMPONENT: SOURCES.JS*****************************/\nexport const GET_SOURCE = 'GET_SOURCE';\nexport const FETCH_SOURCE_REQUEST = 'FETCH_SOURCE_REQUEST';\nexport const FETCH_SOURCE_SUCCESS = 'FETCH_SOURCE_SUCCESS';\nexport const FETCH_SOURCE_FAILURE = 'FETCH_SOURCE_FAILURE';\nexport const SEARCH_SOURCE = 'SEARCH_SOURCE';\n\n//Action Creators are useful for Asynchronous Code\n//Thunk allows to return a function instead of action form an action creator\n//Thunk is essential for making Async function calls in a React-Redux App\n\nexport const searchsource = (searchterm) =>{\n    return{\n        type: SEARCH_SOURCE,\n        payload: searchterm\n    }\n}\n\nexport const fetchSourceRequest = () => {\n    return {\n        type: FETCH_SOURCE_REQUEST\n    }\n}\n\nexport const fetchSourceSuccess = (sources) => {\n    return{\n        type: FETCH_SOURCE_SUCCESS,\n        payload: sources\n    }\n}\n\nexport const fetchSourceError = (err) => {\n    return{\n        type: FETCH_SOURCE_FAILURE,\n        payload: err\n    }\n}\n\nexport const getsource = () =>{\n    return dispatch => {\n        dispatch(fetchSourceRequest()); //Will set loading to true\n        axios.get('https://newsapi.org/v2/sources?apiKey=d52cd4ddccbc429e937e35cd9af2337e')\n        .then( response => {\n            dispatch(fetchSourceSuccess(response.data.sources));\n        })\n        .catch(err => {\n            dispatch(fetchSourceError(err.message));\n        })\n    }\n};\n\n/***************************************************************************************/\n/**********************************COMPONENT: LIST.JS***********************************/\n\nexport const GET_NEWS = 'GET_NEWS';\nexport const FETCH_NEWS_REQUEST = 'FETCH_NEWS_REQUEST';\nexport const FETCH_NEWS_SUCCESS = 'FETCH_NEWS_SUCCESS';\nexport const FETCH_NEWS_FAILURE = 'FETCH_NEWS_FAILURE';\nexport const ADD_LIKED_BOOLEAN = 'ADD_LIKED_BOOLEAN';\nexport const GET_SOURCE_ID = 'GET_SOURCE_ID';\nexport const GET_NEWS_TITLE = 'GET_NEWS_TITLE';\nexport const GET_NEWS_DESCRIPTION = 'GET_NEWS_DESCRIPTION';\nexport const GET_NEWS_IMAGE = 'GET_NEWS_IMAGE';\nexport const GET_NEWS_DATE = 'GET_NEWS_DATE';\nexport const GET_NEWS_URL = 'GET_NEWS_URL';\n\n\nexport const getTitle = (title) => {\n    return{\n        type: GET_NEWS_TITLE,\n        payload: title\n    }\n}\n\nexport const getDescription = (desc) => {\n    return{\n        type: GET_NEWS_DESCRIPTION,\n        payload: desc\n    }\n}\n\nexport const getImageURL = (image) => {\n    return{\n        type: GET_NEWS_IMAGE,\n        payload: image\n    }\n}\n\nexport const getDate = (date) => {\n    return{\n        type: GET_NEWS_DATE,\n        payload: date\n    }\n}\n\nexport const getURL = (url) => {\n    return{\n        type: GET_NEWS_URL,\n        payload: url\n    }\n}\n\nexport const listsourceid = (id) =>{\n    return{\n        type: GET_SOURCE_ID,\n        listid: id\n    }\n}\n\nexport const fetchNewsRequest = () => {\n    return {\n        type: FETCH_NEWS_REQUEST\n    }\n}\n\nexport const fetchNewsSuccess = (news) => {\n    return{\n        type: FETCH_NEWS_SUCCESS,\n        payload: news\n    }\n}\n\nexport const addliked = () =>{\n    return{\n        type: ADD_LIKED_BOOLEAN\n    }\n}\n\nexport const fetchNewsError = (err) => {\n    return{\n        type: FETCH_NEWS_FAILURE,\n        payload: err\n    }\n}\n\nexport const getnews = (id) =>{\n    return dispatch => {\n       dispatch(fetchNewsRequest()); //Will set loading to true\n        axios.get('https://newsapi.org/v2/everything?sources='+id+'&apiKey=d52cd4ddccbc429e937e35cd9af2337e')\n        .then( response => {\n            dispatch(fetchNewsSuccess(response.data.articles), addliked())\n        })\n        .catch(err => {\n            dispatch(fetchNewsError(err.message));\n        })\n    }\n};\n\n/***************************************************************************************/\n/**********************************COMPONENT: FAVORITE.JS***********************************/\n\nexport const TOGGLE_FAVORITE = 'TOGGLE_FAVORITE';\nexport const ADD_NEW_FAVORITE = 'ADD_NEW_FAVORITE';\n\nexport const addfavorite = (url,image,date,title,desc) =>{\n    return{\n        type: ADD_NEW_FAVORITE,\n        payload: {\n            favurl: url,\n            favimage: image,\n            favdate: date,\n            favtitle: title,\n            favdesc: desc\n        }\n    }\n}\n\nexport const togglefavorite = (url) =>{\n    return{\n        type: TOGGLE_FAVORITE,\n        payload: url\n    }\n}\n\n// export const getallfavorites = () =>{\n//     return{\n//         type: GET_ALL_FAVORITES\n//     }\n// }\n\n// export const getfavorite = () =>{\n//     return dispatch  => {\n//         dispatch(getallfavorites());\n//     }\n// }"]},"metadata":{},"sourceType":"module"}