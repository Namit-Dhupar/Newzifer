{"ast":null,"code":"var _jsxFileName = \"/home/namit/React Projects/wizikey-assignment/src/components/SourceList/Sources.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Card, Segment } from 'semantic-ui-react';\nimport classes from './Sources.module.css';\nimport * as actionCreators from '../../store/actions';\n\nclass Sources extends Component {\n  componentDidMount() {\n    this.props.onSourceLoad();\n  }\n\n  render() {\n    let loader;\n    let source = this.props.dailyList.map(dai => /*#__PURE__*/React.createElement(Segment, {\n      vertical: true,\n      key: dai.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.Source,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }\n    }, dai.name)));\n\n    if (!source) {\n      loader = /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 15\n        }\n      }, \"Loading..\");\n    } else {\n      loader = source;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(Card.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 2\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 4\n      }\n    }, \"News Sources\"), loader, /*#__PURE__*/React.createElement(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, \"Favorites(24)\"))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    dailyList: state.list.newsList // dailyItem: state.item.newsItem\n\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSourceLoad: () => dispatch(actionCreators.getsource()) //onNewsClick: () => dispatch(actionCreators.getnews() /*resultID: id*/)\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Sources);","map":{"version":3,"sources":["/home/namit/React Projects/wizikey-assignment/src/components/SourceList/Sources.js"],"names":["React","Component","connect","Card","Segment","classes","actionCreators","Sources","componentDidMount","props","onSourceLoad","render","loader","source","dailyList","map","dai","id","Source","name","mapStateToProps","state","list","newsList","mapDispatchToProps","dispatch","getsource"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,EAAeC,OAAf,QAA8B,mBAA9B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAO,KAAKC,cAAZ,MAAgC,qBAAhC;;AAEA,MAAMC,OAAN,SAAsBN,SAAtB,CAA+B;AAE/BO,EAAAA,iBAAiB,GAAE;AACf,SAAKC,KAAL,CAAWC,YAAX;AACH;;AAEDC,EAAAA,MAAM,GAAE;AACN,QAAIC,MAAJ;AACA,QAAIC,MAAM,GAAG,KAAKJ,KAAL,CAAWK,SAAX,CAAqBC,GAArB,CAAyBC,GAAG,iBACvC,oBAAC,OAAD;AAAS,MAAA,QAAQ,MAAjB;AAAkB,MAAA,GAAG,EAAEA,GAAG,CAACC,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAEZ,OAAO,CAACa,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCF,GAAG,CAACG,IADL,CADF,CADW,CAAb;;AAOC,QAAG,CAACN,MAAJ,EAAW;AACTD,MAAAA,MAAM,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAT;AACD,KAFD,MAGI;AACFA,MAAAA,MAAM,GAAGC,MAAT;AACD;;AAEJ,wBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEKD,MAFL,eAGG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAH,CAAT,CAHH,CADD,CADA,CADA;AAWG;;AAjC4B;;AAoC/B,MAAMQ,eAAe,GAAGC,KAAK,IAAG;AAC9B,SAAM;AACFP,IAAAA,SAAS,EAAEO,KAAK,CAACC,IAAN,CAAWC,QADpB,CAEJ;;AAFI,GAAN;AAID,CALD;;AAOA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAM;AACJf,IAAAA,YAAY,EAAE,MAAMe,QAAQ,CAACnB,cAAc,CAACoB,SAAf,EAAD,CADxB,CAEJ;;AAFI,GAAN;AAID,CALD;;AAOA,eAAexB,OAAO,CAACkB,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CjB,OAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Card, Segment } from 'semantic-ui-react';\nimport classes from './Sources.module.css';\nimport * as actionCreators from '../../store/actions';\n\nclass Sources extends Component{\n\ncomponentDidMount(){\n    this.props.onSourceLoad();\n}\n  \nrender(){\n  let loader;\n  let source = this.props.dailyList.map(dai =>(      \n    <Segment vertical key={dai.id}>\n      <div className={classes.Source}>\n      {dai.name}\n      </div> \n    </Segment>\n   ))\n   if(!source){\n     loader = <p>Loading..</p>\n   }\n   else{\n     loader = source;\n   }\n\nreturn(\n<div>\n<Card>\n <Card.Content>\n   <Card.Header>News Sources</Card.Header>\n     {loader}\n    <Segment><b><i>Favorites(24)</i></b></Segment>\n  </Card.Content> \n</Card>    \n</div>\n)\n  }  \n     }\n\nconst mapStateToProps = state =>{\n  return{\n      dailyList: state.list.newsList\n    // dailyItem: state.item.newsItem\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return{\n    onSourceLoad: () => dispatch(actionCreators.getsource())\n    //onNewsClick: () => dispatch(actionCreators.getnews() /*resultID: id*/)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Sources);\n\n"]},"metadata":{},"sourceType":"module"}