{"ast":null,"code":"var _jsxFileName = \"/home/namit/React Projects/wizikey-assignment/src/components/ListSection/List.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Card, Feed, Icon, Loader } from 'semantic-ui-react';\nimport classes from './List.module.css'; //import * as actionCreators from '../../store/actions';\n\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nclass List extends Component {\n  render() {\n    //console.log(this.props.dailyListID);\n    let sourcename = null;\n    let newsList = null;\n\n    if (this.props.dailySourceLoading) {\n      newsList = /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.loader,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Loader, {\n        size: \"large\",\n        active: true,\n        inline: \"centered\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 51\n        }\n      }));\n      sourcename = /*#__PURE__*/React.createElement(Loader, {\n        size: \"medium\",\n        active: true,\n        inline: \"centered\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }\n      });\n    }\n\n    if (!this.props.dailySourceLoading) {\n      // eslint-disable-next-line\n      newsList = this.props.dailySource.map((source, index) => {\n        if (source.source.id === this.props.dailyListID) {\n          return /*#__PURE__*/React.createElement(Feed.Event, {\n            key: index,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(Feed.Label, {\n            image: source.urlToImage ? source.urlToImage : \"https://st2.depositphotos.com/1031343/6019/v/450/depositphotos_60193257-stock-illustration-news-flash-stamp.jpg\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 11\n            }\n          }), /*#__PURE__*/React.createElement(Feed.Content, {\n            className: classes.List,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: classes.date,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(Feed.Date, {\n            content: new Date(source.publishedAt).toDateString(),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 13\n            }\n          })), /*#__PURE__*/React.createElement(\"div\", {\n            className: classes.star,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(Icon, {\n            name: \"star\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 13\n            }\n          })), /*#__PURE__*/React.createElement(Feed.Summary, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 13\n            }\n          }, source.title)));\n        }\n      }); // sourcename = (this.props.dailySource.map(sn=> console.log(Object.values(sn.source).splice(1)))\n      //Extract the News Source Name\n    }\n\n    sourcename = this.props.dailySource.slice(0, 1).map(sn => sn.source.id === this.props.dailyListID ? console.log(Object.values(sn.source).splice(1)) : '');\n    return /*#__PURE__*/React.createElement(Card, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(Card.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.sourcehead,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 8\n      }\n    }, sourcename))), /*#__PURE__*/React.createElement(Card.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(InfiniteScroll, {\n      dataLength: this.props.dailySource.length,\n      style: {\n        height: \"67.5vh\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Feed, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, newsList))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    dailySource: state.item.newsItem,\n    dailySourceLoading: state.item.newsloading,\n    dailyListID: state.list.id\n  };\n}; // const mapDispatchToProps = dispatch =>{\n//   return{\n//     onSourceID: (id) => dispatch(actionCreators.listsourceid(id))\n//   }\n// }\n\n\nexport default connect(mapStateToProps, null)(List);","map":{"version":3,"sources":["/home/namit/React Projects/wizikey-assignment/src/components/ListSection/List.js"],"names":["React","Component","connect","Card","Feed","Icon","Loader","classes","InfiniteScroll","List","render","sourcename","newsList","props","dailySourceLoading","loader","dailySource","map","source","index","id","dailyListID","urlToImage","date","Date","publishedAt","toDateString","star","title","slice","sn","console","log","Object","values","splice","sourcehead","length","height","mapStateToProps","state","item","newsItem","newsloading","list"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,IAArB,EAA2BC,MAA3B,QAAyC,mBAAzC;AACA,OAAOC,OAAP,MAAoB,mBAApB,C,CACA;;AACA,OAAOC,cAAP,MAA2B,iCAA3B;;AAGA,MAAMC,IAAN,SAAmBR,SAAnB,CAA4B;AAG3BS,EAAAA,MAAM,GAAE;AACJ;AACA,QAAIC,UAAU,GAAG,IAAjB;AACA,QAAIC,QAAQ,GAAG,IAAf;;AACA,QAAG,KAAKC,KAAL,CAAWC,kBAAd,EAAiC;AAC/BF,MAAAA,QAAQ,gBAAG;AAAK,QAAA,SAAS,EAAEL,OAAO,CAACQ,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAgC,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,OAAb;AAAqB,QAAA,MAAM,MAA3B;AAA4B,QAAA,MAAM,EAAC,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAhC,CAAX;AACAJ,MAAAA,UAAU,gBAAG,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,MAAM,MAA5B;AAA6B,QAAA,MAAM,EAAC,UAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAb;AACD;;AACD,QAAG,CAAC,KAAKE,KAAL,CAAWC,kBAAf,EAAkC;AAChC;AACAF,MAAAA,QAAQ,GAAK,KAAKC,KAAL,CAAWG,WAAX,CAAuBC,GAAvB,CAA2B,CAACC,MAAD,EAAQC,KAAR,KAAiB;AACvD,YAAGD,MAAM,CAACA,MAAP,CAAcE,EAAd,KAAqB,KAAKP,KAAL,CAAWQ,WAAnC,EAA+C;AAC/C,8BACC,oBAAC,IAAD,CAAM,KAAN;AAAY,YAAA,GAAG,EAAEF,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACA,oBAAC,IAAD,CAAM,KAAN;AAAY,YAAA,KAAK,EAAGD,MAAM,CAACI,UAAR,GACjBJ,MAAM,CAACI,UADU,GAEnB,iHAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAIA,oBAAC,IAAD,CAAM,OAAN;AAAc,YAAA,SAAS,EAAEf,OAAO,CAACE,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACE;AAAK,YAAA,SAAS,EAAEF,OAAO,CAACgB,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACA,oBAAC,IAAD,CAAM,IAAN;AAAW,YAAA,OAAO,EAAE,IAAIC,IAAJ,CAASN,MAAM,CAACO,WAAhB,EAA6BC,YAA7B,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,CADF,eAIE;AAAK,YAAA,SAAS,EAAEnB,OAAO,CAACoB,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACA,oBAAC,IAAD;AAAM,YAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,CAJF,eAOE,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACCT,MAAM,CAACU,KADR,CAPF,CAJA,CADD;AAkBD;AACA,OArBY,CAAb,CAFgC,CAyBjC;AACC;AACD;;AACDjB,IAAAA,UAAU,GAAI,KAAKE,KAAL,CAAWG,WAAX,CAAuBa,KAAvB,CAA6B,CAA7B,EAA+B,CAA/B,EAAkCZ,GAAlC,CACba,EAAE,IAAKA,EAAE,CAACZ,MAAH,CAAUE,EAAV,KAAiB,KAAKP,KAAL,CAAWQ,WAA7B,GAA4CU,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,MAAP,CAAcJ,EAAE,CAACZ,MAAjB,EAAyBiB,MAAzB,CAAgC,CAAhC,CAAZ,CAA5C,GAA6F,EADtF,CAAd;AAKD,wBACF,oBAAC,IAAD;AAAM,MAAA,KAAK,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAK,MAAA,SAAS,EAAE5B,OAAO,CAAC6B,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGzB,UADH,CADD,CADF,CADF,eAQE,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,cAAD;AAAgB,MAAA,UAAU,EAAE,KAAKE,KAAL,CAAWG,WAAX,CAAuBqB,MAAnD;AAA2D,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAE;AAAT,OAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE1B,QADF,CADF,CADA,CARF,CADE;AAiBE;;AA7DsB;;AAgE5B,MAAM2B,eAAe,GAAGC,KAAK,IAAG;AAC9B,SAAM;AACJxB,IAAAA,WAAW,EAAEwB,KAAK,CAACC,IAAN,CAAWC,QADpB;AAEJ5B,IAAAA,kBAAkB,EAAE0B,KAAK,CAACC,IAAN,CAAWE,WAF3B;AAGJtB,IAAAA,WAAW,EAAEmB,KAAK,CAACI,IAAN,CAAWxB;AAHpB,GAAN;AAKD,CAND,C,CAQA;AACA;AACA;AACA;AACA;;;AAEA,eAAelB,OAAO,CAACqC,eAAD,EAAkB,IAAlB,CAAP,CAA+B9B,IAA/B,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Card, Feed, Icon, Loader } from 'semantic-ui-react';\nimport classes from './List.module.css';\n//import * as actionCreators from '../../store/actions';\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\n\nclass List extends Component{\n\n\n render(){\n     //console.log(this.props.dailyListID);\n     let sourcename = null;\n     let newsList = null;\n     if(this.props.dailySourceLoading){\n       newsList = <div className={classes.loader}><Loader size='large' active inline='centered' /></div>;\n       sourcename = <Loader size='medium' active inline='centered' />;\n     }\n     if(!this.props.dailySourceLoading){\n       // eslint-disable-next-line\n       newsList = ( this.props.dailySource.map((source,index) =>{\n         if(source.source.id === this.props.dailyListID){\n         return(\n          <Feed.Event key={index}>\n          <Feed.Label image={(source.urlToImage) ? \n            source.urlToImage : \n          \"https://st2.depositphotos.com/1031343/6019/v/450/depositphotos_60193257-stock-illustration-news-flash-stamp.jpg\"} />\n          <Feed.Content className={classes.List}>\n            <div className={classes.date}>\n            <Feed.Date content={new Date(source.publishedAt).toDateString()} />\n            </div>\n            <div className={classes.star}>\n            <Icon name='star' />\n            </div>\n            <Feed.Summary>\n            {source.title}\n            </Feed.Summary>\n          </Feed.Content>\n        </Feed.Event>\n        ) \n       } \n       }\n       ))\n      // sourcename = (this.props.dailySource.map(sn=> console.log(Object.values(sn.source).splice(1)))\n       //Extract the News Source Name\n     }\n     sourcename = (this.props.dailySource.slice(0,1).map((\n      sn => (sn.source.id === this.props.dailyListID) ? console.log(Object.values(sn.source).splice(1)): ''))\n      );\n    \n\n    return(\n  <Card fluid>\n    <Card.Content>\n      <Card.Header>\n       <div className={classes.sourcehead}>\n         {sourcename}\n       </div> \n      </Card.Header>\n    </Card.Content>\n    <Card.Content>\n    <InfiniteScroll dataLength={this.props.dailySource.length} style={{height: \"67.5vh\" }}>\n      <Feed>\n       {newsList}\n      </Feed>\n      </InfiniteScroll>\n    </Card.Content>\n  </Card>\n    )}\n}\n\nconst mapStateToProps = state =>{\n  return{\n    dailySource: state.item.newsItem,\n    dailySourceLoading: state.item.newsloading,\n    dailyListID: state.list.id\n  }\n}\n\n// const mapDispatchToProps = dispatch =>{\n//   return{\n//     onSourceID: (id) => dispatch(actionCreators.listsourceid(id))\n//   }\n// }\n\nexport default connect(mapStateToProps, null)(List);"]},"metadata":{},"sourceType":"module"}