{"ast":null,"code":"var _jsxFileName = \"/home/namit/React Projects/wizikey-assignment/src/components/ListSection/List.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Card, Feed, Loader, Image } from 'semantic-ui-react';\nimport classes from './List.module.css';\nimport * as actionCreators from '../../store/actions';\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nclass List extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isFav: false\n    };\n\n    this.isclicked = () => {\n      this.setState({\n        isFav: !this.state.isFav\n      });\n    };\n  }\n\n  render() {\n    let newsList = null;\n    let sourcename = null;\n\n    if (this.props.dailySourceLoading) {\n      newsList = /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.loader,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Loader, {\n        size: \"large\",\n        active: true,\n        inline: \"centered\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 51\n        }\n      }));\n      sourcename = /*#__PURE__*/React.createElement(Loader, {\n        size: \"medium\",\n        active: true,\n        inline: \"centered\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }\n      });\n    }\n\n    if (!this.props.dailySourceLoading) {\n      // eslint-disable-next-line\n      newsList = this.props.dailySource.map((source, index) => {\n        if (source.source.id === this.props.dailyListID) {\n          return /*#__PURE__*/React.createElement(Feed.Event, {\n            key: index,\n            className: classes.feed,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(Image, {\n            src: source.urlToImage ? source.urlToImage : \"https://st2.depositphotos.com/1031343/6019/v/450/depositphotos_60193257-stock-illustration-news-flash-stamp.jpg\",\n            size: \"tiny\",\n            inline: true,\n            className: classes.thumbnail,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 11\n            }\n          }), /*#__PURE__*/React.createElement(Feed.Content, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: classes.date,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(Feed.Date, {\n            content: new Date(source.publishedAt).toDateString(),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 13\n            }\n          })), /*#__PURE__*/React.createElement(\"div\", {\n            className: classes.star,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(\"span\", {\n            className: \"fa fa-star\",\n            onClick: () => this.isclicked,\n            style: {\n              color: this.state.isFav ? 'red' : ''\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 13\n            }\n          })), /*#__PURE__*/React.createElement(Feed.Summary, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: classes.List,\n            onClick: () => {\n              this.props.onPostTitle(source.title);\n              this.props.onPostImage(source.urlToImage);\n              this.props.onPostDescription(source.description);\n              this.props.onPostDate(new Date(source.publishedAt).toDateString());\n              this.props.onPostReadMore(source.url);\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 13\n            }\n          }, source.title))));\n        }\n      }); //Extract the News Source Name\n\n      sourcename = this.props.dailySource.splice(1).slice(0, 1).map(sn => sn.source.id === this.props.dailyListID ? Object.values(sn.source).splice(1) : '');\n    }\n\n    if (!this.props.dailyListID) {\n      newsList = /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.mount,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 16\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 16\n        }\n      }, \"Click on any News Source\"));\n    }\n\n    return /*#__PURE__*/React.createElement(Card, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(Card.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.sourcehead,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 8\n      }\n    }, sourcename))), /*#__PURE__*/React.createElement(Card.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(InfiniteScroll, {\n      dataLength: this.props.dailySource.length,\n      style: {\n        height: \"67.5vh\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Feed, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }\n    }, newsList))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    dailySource: state.list.newsItem,\n    dailySourceLoading: state.list.newsloading,\n    dailyListID: state.source.id\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onPostTitle: title => dispatch(actionCreators.getTitle(title)),\n    onPostImage: image => dispatch(actionCreators.getImageURL(image)),\n    onPostDescription: desc => dispatch(actionCreators.getDescription(desc)),\n    onPostDate: date => dispatch(actionCreators.getDate(date)),\n    onPostReadMore: url => dispatch(actionCreators.getURL(url)),\n    onAddFavorite: (url, image, date, title, desc) => dispatch(actionCreators.addfavorite(url, image, date, title, desc))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(List);","map":{"version":3,"sources":["/home/namit/React Projects/wizikey-assignment/src/components/ListSection/List.js"],"names":["React","Component","connect","Card","Feed","Loader","Image","classes","actionCreators","InfiniteScroll","List","state","isFav","isclicked","setState","render","newsList","sourcename","props","dailySourceLoading","loader","dailySource","map","source","index","id","dailyListID","feed","urlToImage","thumbnail","date","Date","publishedAt","toDateString","star","color","onPostTitle","title","onPostImage","onPostDescription","description","onPostDate","onPostReadMore","url","splice","slice","sn","Object","values","mount","sourcehead","length","height","mapStateToProps","list","newsItem","newsloading","mapDispatchToProps","dispatch","getTitle","image","getImageURL","desc","getDescription","getDate","getURL","onAddFavorite","addfavorite"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Card, Feed, Loader, Image } from 'semantic-ui-react';\nimport classes from './List.module.css';\nimport * as actionCreators from '../../store/actions';\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\n\nclass List extends Component{\n\n  state= {\n    isFav: false\n  }\n \n  isclicked = () =>{\n    this.setState({isFav: !this.state.isFav})\n  }\n  \n render(){\n     let newsList = null;\n     let sourcename = null;\n     if(this.props.dailySourceLoading){\n       newsList = <div className={classes.loader}><Loader size='large' active inline='centered' /></div>;\n       sourcename = <Loader size='medium' active inline='centered' />;\n     }\n     if(!this.props.dailySourceLoading){\n       // eslint-disable-next-line\n       newsList = ( this.props.dailySource.map((source,index) =>{\n         if(source.source.id === this.props.dailyListID){\n         return(\n          <Feed.Event key={index} className={classes.feed}>\n          <Image src={(source.urlToImage) ? \n            source.urlToImage : \n          \"https://st2.depositphotos.com/1031343/6019/v/450/depositphotos_60193257-stock-illustration-news-flash-stamp.jpg\"} \n          size='tiny' inline={true} className={classes.thumbnail}/>\n          <Feed.Content>\n            <div className={classes.date}>\n            <Feed.Date content={new Date(source.publishedAt).toDateString()} />\n            </div>\n            {/* <div className={classes.star}>\n            <span className=\"fa fa-star\" onClick={()=>{this.props.onAddFavorite(source.url,\n            source.urlToImage, \n            new Date(source.publishedAt).toDateString(),\n            source.title,\n            source.description\n            )}}\n            style={{color: (this.props.toggleFav)? 'red' : ''}}></span>\n            </div> */}\n            <div className={classes.star}>\n            <span className=\"fa fa-star\" onClick={()=>this.isclicked}\n            style={{color: (this.state.isFav)? 'red' : ''}}></span>\n            </div>\n            <Feed.Summary>\n            <div className={classes.List} onClick={()=>{\n            this.props.onPostTitle(source.title);\n            this.props.onPostImage(source.urlToImage);\n            this.props.onPostDescription(source.description);\n            this.props.onPostDate(new Date(source.publishedAt).toDateString());\n            this.props.onPostReadMore(source.url);}}>\n            {source.title}\n            </div>\n            </Feed.Summary>\n          </Feed.Content>\n        </Feed.Event>\n        ) \n       }\n       }\n       ))\n       //Extract the News Source Name\n       sourcename = (this.props.dailySource.splice(1).slice(0,1).map((\n        sn => (sn.source.id === this.props.dailyListID) ? (Object.values(sn.source).splice(1)): ''))\n        );\n     }\n     if(!this.props.dailyListID)\n     {\n     newsList= <div className={classes.mount}>\n               <h3>Click on any News Source</h3>\n               </div>\n     }\n\n    return(\n  <Card fluid>\n    <Card.Content>\n      <Card.Header>\n       <div className={classes.sourcehead}>\n         {sourcename}\n       </div> \n      </Card.Header>\n    </Card.Content>\n    <Card.Content>\n    <InfiniteScroll dataLength={this.props.dailySource.length} style={{height: \"67.5vh\" }}>\n      <Feed>\n      {newsList}\n      </Feed>\n      </InfiniteScroll>\n    </Card.Content>\n  </Card>\n    )}\n}\n\nconst mapStateToProps = state =>{\n  return{\n    dailySource: state.list.newsItem,\n    dailySourceLoading: state.list.newsloading,\n    dailyListID: state.source.id\n  }\n}\n\nconst mapDispatchToProps = dispatch =>{\n  return{\n    onPostTitle: (title) => dispatch(actionCreators.getTitle(title)),\n    onPostImage: (image) => dispatch(actionCreators.getImageURL(image)),\n    onPostDescription: (desc) => dispatch(actionCreators.getDescription(desc)),\n    onPostDate: (date) => dispatch(actionCreators.getDate(date)),\n    onPostReadMore: (url) => dispatch(actionCreators.getURL(url)),\n    onAddFavorite: (url,image,date,title,desc) => dispatch(actionCreators.addfavorite(url,image,date,title,desc))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(List);"]},"metadata":{},"sourceType":"module"}