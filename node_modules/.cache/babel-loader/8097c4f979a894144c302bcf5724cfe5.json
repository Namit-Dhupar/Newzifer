{"ast":null,"code":"import axios from 'axios';\nexport const GET_SOURCE = 'GET_SOURCE';\nexport const GET_NEWS = 'GET_NEWS';\nexport const FETCH_SOURCE_REQUEST = 'FETCH_SOURCE_REQUEST';\nexport const FETCH_SOURCE_SUCCESS = 'FETCH_SOURCE_SUCCESS';\nexport const FETCH_SOURCE_FAILURE = 'FETCH_SOURCE_FAILURE';\nexport const SEARCH_SOURCE = 'SEARCH_SOURCE';\nexport const GET_SOURCE_ID = 'GET_SOURCE_ID'; //Action Creators are useful for Asynchronous Code\n//Thunk allows to return a function instead of action form an action creator\n//Thunk is essential for making Async function calls in a React-Redux App\n\nexport const sourceid = id => {\n  return {\n    type: GET_SOURCE_ID,\n    payload: id\n  };\n};\nexport const searchsource = searchterm => {\n  return {\n    type: SEARCH_SOURCE,\n    payload: searchterm\n  };\n};\nexport const fetchSourceRequest = () => {\n  return {\n    type: FETCH_SOURCE_REQUEST\n  };\n};\nexport const fetchSourceSuccess = sources => {\n  return {\n    type: FETCH_SOURCE_SUCCESS,\n    payload: sources\n  };\n};\nexport const fetchSourceError = err => {\n  return {\n    type: FETCH_SOURCE_FAILURE,\n    payload: err\n  };\n};\nexport const getsource = () => {\n  return dispatch => {\n    dispatch(fetchSourceRequest()); //Will set loading to true\n\n    axios.get('https://newsapi.org/v2/sources?apiKey=c854119491604f85a1f1f657fb2cd41e').then(response => {\n      dispatch(fetchSourceSuccess(response.data.sources));\n    }).catch(err => {\n      dispatch(fetchSourceError(err.message));\n    });\n  };\n}; // export const getnews = () =>{\n//     return{\n//         type: GET_NEWS\n//     }\n// }","map":{"version":3,"sources":["/home/namit/React Projects/wizikey-assignment/src/store/actions.js"],"names":["axios","GET_SOURCE","GET_NEWS","FETCH_SOURCE_REQUEST","FETCH_SOURCE_SUCCESS","FETCH_SOURCE_FAILURE","SEARCH_SOURCE","GET_SOURCE_ID","sourceid","id","type","payload","searchsource","searchterm","fetchSourceRequest","fetchSourceSuccess","sources","fetchSourceError","err","getsource","dispatch","get","then","response","data","catch","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,UAAU,GAAG,YAAnB;AACP,OAAO,MAAMC,QAAQ,GAAG,UAAjB;AACP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB,C,CAEP;AACA;AACA;;AAEA,OAAO,MAAMC,QAAQ,GAAIC,EAAD,IAAO;AAC3B,SAAM;AACFC,IAAAA,IAAI,EAAEH,aADJ;AAEFI,IAAAA,OAAO,EAAEF;AAFP,GAAN;AAIH,CALM;AAOP,OAAO,MAAMG,YAAY,GAAIC,UAAD,IAAe;AACvC,SAAM;AACFH,IAAAA,IAAI,EAAEJ,aADJ;AAEFK,IAAAA,OAAO,EAAEE;AAFP,GAAN;AAIH,CALM;AASP,OAAO,MAAMC,kBAAkB,GAAG,MAAM;AACpC,SAAO;AACHJ,IAAAA,IAAI,EAAEP;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMY,kBAAkB,GAAIC,OAAD,IAAa;AAC3C,SAAM;AACFN,IAAAA,IAAI,EAAEN,oBADJ;AAEFO,IAAAA,OAAO,EAAEK;AAFP,GAAN;AAIH,CALM;AAOP,OAAO,MAAMC,gBAAgB,GAAIC,GAAD,IAAS;AACrC,SAAM;AACFR,IAAAA,IAAI,EAAEL,oBADJ;AAEFM,IAAAA,OAAO,EAAEO;AAFP,GAAN;AAIH,CALM;AAOP,OAAO,MAAMC,SAAS,GAAG,MAAK;AAC1B,SAAOC,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACN,kBAAkB,EAAnB,CAAR,CADe,CACiB;;AAChCd,IAAAA,KAAK,CAACqB,GAAN,CAAU,wEAAV,EACCC,IADD,CACOC,QAAQ,IAAI;AACfH,MAAAA,QAAQ,CAACL,kBAAkB,CAACQ,QAAQ,CAACC,IAAT,CAAcR,OAAf,CAAnB,CAAR;AACH,KAHD,EAICS,KAJD,CAIOP,GAAG,IAAI;AACVE,MAAAA,QAAQ,CAACH,gBAAgB,CAACC,GAAG,CAACQ,OAAL,CAAjB,CAAR;AACH,KAND;AAOH,GATD;AAUH,CAXM,C,CAaP;AACA;AACA;AACA;AACA","sourcesContent":["import axios from 'axios';\n\nexport const GET_SOURCE = 'GET_SOURCE';\nexport const GET_NEWS = 'GET_NEWS';\nexport const FETCH_SOURCE_REQUEST = 'FETCH_SOURCE_REQUEST';\nexport const FETCH_SOURCE_SUCCESS = 'FETCH_SOURCE_SUCCESS';\nexport const FETCH_SOURCE_FAILURE = 'FETCH_SOURCE_FAILURE';\nexport const SEARCH_SOURCE = 'SEARCH_SOURCE';\nexport const GET_SOURCE_ID = 'GET_SOURCE_ID';\n\n//Action Creators are useful for Asynchronous Code\n//Thunk allows to return a function instead of action form an action creator\n//Thunk is essential for making Async function calls in a React-Redux App\n\nexport const sourceid = (id) =>{\n    return{\n        type: GET_SOURCE_ID,\n        payload: id\n    }\n}\n\nexport const searchsource = (searchterm) =>{\n    return{\n        type: SEARCH_SOURCE,\n        payload: searchterm\n    }\n}\n\n\n\nexport const fetchSourceRequest = () => {\n    return {\n        type: FETCH_SOURCE_REQUEST\n    }\n}\n\nexport const fetchSourceSuccess = (sources) => {\n    return{\n        type: FETCH_SOURCE_SUCCESS,\n        payload: sources\n    }\n}\n\nexport const fetchSourceError = (err) => {\n    return{\n        type: FETCH_SOURCE_FAILURE,\n        payload: err\n    }\n}\n\nexport const getsource = () =>{\n    return dispatch => {\n        dispatch(fetchSourceRequest()); //Will set loading to true\n        axios.get('https://newsapi.org/v2/sources?apiKey=c854119491604f85a1f1f657fb2cd41e')\n        .then( response => {\n            dispatch(fetchSourceSuccess(response.data.sources));\n        })\n        .catch(err => {\n            dispatch(fetchSourceError(err.message));\n        })\n    }\n};\n\n// export const getnews = () =>{\n//     return{\n//         type: GET_NEWS\n//     }\n// }\n"]},"metadata":{},"sourceType":"module"}