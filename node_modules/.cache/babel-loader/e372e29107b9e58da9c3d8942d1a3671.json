{"ast":null,"code":"var _jsxFileName = \"/home/namit/React Projects/wizikey-assignment/src/components/SourceList/Sources.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Card, Segment, Loader } from 'semantic-ui-react';\nimport classes from './Sources.module.css';\nimport * as actionCreators from '../../store/actions';\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nclass Sources extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      items: Array.from({\n        length: 20\n      }),\n      hasMore: true\n    };\n\n    this.fetchMoreData = () => {\n      if (this.state.items.length >= this.props.dailyList.length) {\n        this.setState({\n          hasMore: false\n        });\n        return;\n      } // a fake async api call like which sends\n      // 20 more records in .5 secs\n\n\n      setTimeout(() => {\n        this.setState({\n          items: this.state.items.concat(Array.from({\n            length: 20\n          }))\n        });\n      }, 500);\n    };\n  }\n\n  componentDidMount() {\n    this.props.onSourceLoad();\n  }\n\n  render() {\n    let newsSource = null;\n    if (this.props.dailyListLoading) newsSource = /*#__PURE__*/React.createElement(Loader, {\n      active: true,\n      inline: \"centered\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    });\n\n    if (!this.props.dailyListLoading) {\n      newsSource = this.props.dailyList.map(dai => /*#__PURE__*/React.createElement(Segment, {\n        vertical: true,\n        key: dai.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.Source,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 7\n        }\n      }, dai.name)));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(Card.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 2\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 4\n      }\n    }, \"News Sources\"), /*#__PURE__*/React.createElement(InfiniteScroll, {\n      dataLength: this.state.items.length,\n      next: this.fetchMoreData,\n      hasMore: this.state.hasMore,\n      loader: /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 19\n        }\n      }, \"Loading...\"),\n      height: 400,\n      endMessage: /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }\n      }, \"Yay! You have seen it all\")),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 4\n      }\n    }, newsSource), /*#__PURE__*/React.createElement(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, \"Favorites(24)\"))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    dailyList: state.list.newsList,\n    dailyListLoading: state.list.loading // dailyItem: state.item.newsItem\n\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSourceLoad: () => dispatch(actionCreators.getsource()) //onNewsClick: () => dispatch(actionCreators.getnews() /*resultID: id*/)\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Sources);","map":{"version":3,"sources":["/home/namit/React Projects/wizikey-assignment/src/components/SourceList/Sources.js"],"names":["React","Component","connect","Card","Segment","Loader","classes","actionCreators","InfiniteScroll","Sources","state","items","Array","from","length","hasMore","fetchMoreData","props","dailyList","setState","setTimeout","concat","componentDidMount","onSourceLoad","render","newsSource","dailyListLoading","map","dai","id","Source","name","textAlign","mapStateToProps","list","newsList","loading","mapDispatchToProps","dispatch","getsource"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Card, Segment, Loader } from 'semantic-ui-react';\nimport classes from './Sources.module.css';\nimport * as actionCreators from '../../store/actions';\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nclass Sources extends Component{\n\nstate = {\n    items: Array.from({ length: 20 }),\n    hasMore: true\n};\n\ncomponentDidMount(){\n    this.props.onSourceLoad();\n}\n\nfetchMoreData = () => {\n  if (this.state.items.length >= this.props.dailyList.length) {\n    this.setState({ hasMore: false });\n    return;\n  }\n  // a fake async api call like which sends\n  // 20 more records in .5 secs\n  setTimeout(() => {\n    this.setState({\n      items: this.state.items.concat(Array.from({ length: 20 }))\n    });\n  }, 500);\n};\n  \nrender(){\n  let newsSource = null;\n  if (this.props.dailyListLoading)\n  newsSource =  <Loader active inline='centered' />;\n  if(!this.props.dailyListLoading){\n    newsSource =( this.props.dailyList.map(dai =>(      \n    <Segment vertical key={dai.id}>\n      <div className={classes.Source}>\n      {dai.name}\n      </div> \n    </Segment>\n   ))\n  );\n  }\nreturn(\n<div>\n<Card>\n <Card.Content>\n   <Card.Header>News Sources</Card.Header>\n   <InfiniteScroll\n          dataLength={this.state.items.length}\n          next={this.fetchMoreData}\n          hasMore={this.state.hasMore}\n          loader={<h4>Loading...</h4>}\n          height={400}\n          endMessage={\n            <p style={{ textAlign: \"center\" }}>\n              <b>Yay! You have seen it all</b>\n            </p>\n          }\n        >\n     {newsSource}\n     </InfiniteScroll>\n    <Segment><b><i>Favorites(24)</i></b></Segment>\n  </Card.Content> \n</Card>    \n</div>\n)\n  }  \n     }\n\nconst mapStateToProps = state =>{\n  return{\n      dailyList: state.list.newsList,\n      dailyListLoading: state.list.loading\n    // dailyItem: state.item.newsItem\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return{\n    onSourceLoad: () => dispatch(actionCreators.getsource())\n    //onNewsClick: () => dispatch(actionCreators.getnews() /*resultID: id*/)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Sources);\n\n"]},"metadata":{},"sourceType":"module"}