{"ast":null,"code":"var _jsxFileName = \"/home/namit/React Projects/wizikey-assignment/src/components/ListSection/List.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Card, Feed, Icon, Loader } from 'semantic-ui-react';\nimport classes from './List.module.css';\nimport * as actionCreators from '../../store/actions';\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nclass List extends Component {\n  componentDidMount() {\n    this.props.onNewsLoad();\n  }\n\n  render() {\n    let newsList = null;\n\n    if (this.props.dailySourceLoading) {\n      newsList = /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.loader,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Loader, {\n        size: \"large\",\n        active: true,\n        inline: \"centered\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 51\n        }\n      }));\n    }\n\n    if (this.props.dailySourceLoading) {\n      newsList = this.props.dailySource.map((source, index) => {\n        return /*#__PURE__*/React.createElement(Feed.Event, {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Feed.Label, {\n          image: source.urlToImage,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 11\n          }\n        }), /*#__PURE__*/React.createElement(Feed.Content, {\n          className: classes.List,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: classes.date,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Feed.Date, {\n          content: source.publishedAt.toDateString(),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: classes.star,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Icon, {\n          name: \"star\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }\n        })), /*#__PURE__*/React.createElement(Feed.Summary, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }\n        }, source.description)));\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(Card, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(Card.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.sourcehead,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 8\n      }\n    }, \"Source Name\"))), /*#__PURE__*/React.createElement(Card.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(InfiniteScroll, {\n      dataLength: 20,\n      style: {\n        height: \"65vh\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Feed, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, newsList))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    dailySource: state.item.newsItem,\n    dailySourceLoading: state.item.newsloading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onNewsLoad: () => dispatch(actionCreators.getnews())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(List);","map":{"version":3,"sources":["/home/namit/React Projects/wizikey-assignment/src/components/ListSection/List.js"],"names":["React","Component","connect","Card","Feed","Icon","Loader","classes","actionCreators","InfiniteScroll","List","componentDidMount","props","onNewsLoad","render","newsList","dailySourceLoading","loader","dailySource","map","source","index","urlToImage","date","publishedAt","toDateString","star","description","sourcehead","height","mapStateToProps","state","item","newsItem","newsloading","mapDispatchToProps","dispatch","getnews"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,IAArB,EAA2BC,MAA3B,QAAyC,mBAAzC;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAO,KAAKC,cAAZ,MAAgC,qBAAhC;AACA,OAAOC,cAAP,MAA2B,iCAA3B;;AAEA,MAAMC,IAAN,SAAmBT,SAAnB,CAA4B;AAEzBU,EAAAA,iBAAiB,GAAE;AACjB,SAAKC,KAAL,CAAWC,UAAX;AACD;;AAEFC,EAAAA,MAAM,GAAE;AACL,QAAIC,QAAQ,GAAG,IAAf;;AACA,QAAG,KAAKH,KAAL,CAAWI,kBAAd,EAAiC;AAC/BD,MAAAA,QAAQ,gBAAG;AAAK,QAAA,SAAS,EAAER,OAAO,CAACU,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAgC,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,OAAb;AAAqB,QAAA,MAAM,MAA3B;AAA4B,QAAA,MAAM,EAAC,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAhC,CAAX;AACD;;AACD,QAAG,KAAKL,KAAL,CAAWI,kBAAd,EAAiC;AAC/BD,MAAAA,QAAQ,GAAK,KAAKH,KAAL,CAAWM,WAAX,CAAuBC,GAAvB,CAA2B,CAACC,MAAD,EAAQC,KAAR,KAAiB;AACvD,4BACC,oBAAC,IAAD,CAAM,KAAN;AAAY,UAAA,GAAG,EAAEA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACA,oBAAC,IAAD,CAAM,KAAN;AAAY,UAAA,KAAK,EAAED,MAAM,CAACE,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA,eAEA,oBAAC,IAAD,CAAM,OAAN;AAAc,UAAA,SAAS,EAAEf,OAAO,CAACG,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAK,UAAA,SAAS,EAAEH,OAAO,CAACgB,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACA,oBAAC,IAAD,CAAM,IAAN;AAAW,UAAA,OAAO,EAAEH,MAAM,CAACI,WAAP,CAAmBC,YAAnB,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA,CADF,eAIE;AAAK,UAAA,SAAS,EAAElB,OAAO,CAACmB,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACA,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA,CAJF,eAOE,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACCN,MAAM,CAACO,WADR,CAPF,CAFA,CADD;AAgBD,OAjBY,CAAb;AAkBD;;AAEF,wBACF,oBAAC,IAAD;AAAM,MAAA,KAAK,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAK,MAAA,SAAS,EAAEpB,OAAO,CAACqB,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADD,CADF,CADF,eAQE,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,cAAD;AAAgB,MAAA,UAAU,EAAE,EAA5B;AAAgC,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAE;AAAT,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEd,QADF,CADF,CADA,CARF,CADE;AAiBE;;AAjDsB;;AAoD5B,MAAMe,eAAe,GAAGC,KAAK,IAAG;AAC9B,SAAM;AACJb,IAAAA,WAAW,EAAEa,KAAK,CAACC,IAAN,CAAWC,QADpB;AAEJjB,IAAAA,kBAAkB,EAAEe,KAAK,CAACC,IAAN,CAAWE;AAF3B,GAAN;AAID,CALD;;AAOA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAG;AACpC,SAAM;AACJvB,IAAAA,UAAU,EAAE,MAAMuB,QAAQ,CAAC5B,cAAc,CAAC6B,OAAf,EAAD;AADtB,GAAN;AAGD,CAJD;;AAMA,eAAenC,OAAO,CAAC4B,eAAD,EAAkBK,kBAAlB,CAAP,CAA6CzB,IAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Card, Feed, Icon, Loader } from 'semantic-ui-react';\nimport classes from './List.module.css';\nimport * as actionCreators from '../../store/actions';\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nclass List extends Component{\n\n   componentDidMount(){\n     this.props.onNewsLoad();\n   }\n\n  render(){\n     let newsList = null;\n     if(this.props.dailySourceLoading){\n       newsList = <div className={classes.loader}><Loader size='large' active inline='centered' /></div>;\n     }\n     if(this.props.dailySourceLoading){\n       newsList = ( this.props.dailySource.map((source,index) =>{\n         return(\n          <Feed.Event key={index}>\n          <Feed.Label image={source.urlToImage} />\n          <Feed.Content className={classes.List}>\n            <div className={classes.date}>\n            <Feed.Date content={source.publishedAt.toDateString()} />\n            </div>\n            <div className={classes.star}>\n            <Icon name='star' />\n            </div>\n            <Feed.Summary>\n            {source.description}\n            </Feed.Summary>\n          </Feed.Content>\n        </Feed.Event>\n         )\n       }) )\n     }\n\n    return(\n  <Card fluid>\n    <Card.Content>\n      <Card.Header>\n       <div className={classes.sourcehead}>\n         Source Name\n       </div> \n      </Card.Header>\n    </Card.Content>\n    <Card.Content>\n    <InfiniteScroll dataLength={20} style={{height: \"65vh\" }}>\n      <Feed>\n       {newsList}\n      </Feed>\n      </InfiniteScroll>\n    </Card.Content>\n  </Card>\n    )}\n}\n\nconst mapStateToProps = state =>{\n  return{\n    dailySource: state.item.newsItem,\n    dailySourceLoading: state.item.newsloading\n  }\n}\n\nconst mapDispatchToProps = dispatch =>{\n  return{\n    onNewsLoad: () => dispatch(actionCreators.getnews())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(List);"]},"metadata":{},"sourceType":"module"}