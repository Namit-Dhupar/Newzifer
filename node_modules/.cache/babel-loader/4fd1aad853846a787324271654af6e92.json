{"ast":null,"code":"var _jsxFileName = \"/home/namit/React Projects/wizikey-assignment/src/components/ItemSection/Item.js\";\nimport React, { Component } from 'react';\nimport { Card, Icon, Image } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport classes from './Item.module.css';\n\nclass Item extends Component {\n  render() {\n    let newsPost = null;\n\n    if (this.props.FullPostLoading) {\n      newsPost = /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.loader,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 16\n        }\n      }, /*#__PURE__*/React.createElement(Loader, {\n        size: \"large\",\n        active: true,\n        inline: \"centered\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 48\n        }\n      }));\n    }\n\n    if (!this.props.FullPostLoading) {\n      newsPost = this.props.FullPost.map((full, index) => {\n        return /*#__PURE__*/React.createElement(Card, {\n          key: index,\n          fluid: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Image, {\n          src: full.urlToImage,\n          wrapped: true,\n          ui: false,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 9\n          }\n        }), /*#__PURE__*/React.createElement(Card.Content, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(Card.Header, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 11\n          }\n        }, full.title), /*#__PURE__*/React.createElement(Card.Meta, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"date\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }\n        }, new Date(full.publishedAt).toDateString(), \" \")), /*#__PURE__*/React.createElement(Card.Description, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 11\n          }\n        }, full.content)), /*#__PURE__*/React.createElement(Card.Content, {\n          extra: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Icon, {\n          name: \"star\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }\n        }), \"Add To Favorites\")));\n      });\n    }\n\n    return {\n      newsPost\n    };\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    FullPost: state.item.newsPost,\n    FullPostLoading: state.item.postloading\n  };\n};\n\nexport default connect(mapStateToProps, null)(Item);","map":{"version":3,"sources":["/home/namit/React Projects/wizikey-assignment/src/components/ItemSection/Item.js"],"names":["React","Component","Card","Icon","Image","connect","classes","Item","render","newsPost","props","FullPostLoading","loader","FullPost","map","full","index","urlToImage","title","Date","publishedAt","toDateString","content","mapStateToProps","state","item","postloading"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,KAArB,QAAkC,mBAAlC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAEA,MAAMC,IAAN,SAAmBN,SAAnB,CAA4B;AAE1BO,EAAAA,MAAM,GAAE;AACP,QAAIC,QAAQ,GAAG,IAAf;;AACA,QAAG,KAAKC,KAAL,CAAWC,eAAd,EAA8B;AAC7BF,MAAAA,QAAQ,gBAAG;AAAK,QAAA,SAAS,EAAEH,OAAO,CAACM,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAgC,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,OAAb;AAAqB,QAAA,MAAM,MAA3B;AAA4B,QAAA,MAAM,EAAC,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAhC,CAAX;AACD;;AACD,QAAG,CAAC,KAAKF,KAAL,CAAWC,eAAf,EAA+B;AAC7BF,MAAAA,QAAQ,GAAK,KAAKC,KAAL,CAAWG,QAAX,CAAoBC,GAApB,CAAwB,CAACC,IAAD,EAAOC,KAAP,KAAe;AAClD,4BAAQ,oBAAC,IAAD;AAAM,UAAA,GAAG,EAAEA,KAAX;AAAkB,UAAA,KAAK,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACN,oBAAC,KAAD;AAAO,UAAA,GAAG,EAAED,IAAI,CAACE,UAAjB;AAA6B,UAAA,OAAO,MAApC;AAAqC,UAAA,EAAE,EAAE,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADM,eAEN,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAcF,IAAI,CAACG,KAAnB,CADF,eAEE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAM,UAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAwB,IAAIC,IAAJ,CAASJ,IAAI,CAACK,WAAd,EAA2BC,YAA3B,EAAxB,MADF,CAFF,eAKE,oBAAC,IAAD,CAAM,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGN,IAAI,CAACO,OADR,CALF,CAFM,eAWN,oBAAC,IAAD,CAAM,OAAN;AAAc,UAAA,KAAK,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,qBADF,CAXM,CAAR;AAkBD,OAnBY,CAAb;AAoBD;;AAEA,WACC;AAACb,MAAAA;AAAD,KADD;AAGF;;AAjC2B;;AAoC5B,MAAMc,eAAe,GAAGC,KAAK,IAAG;AAC9B,SAAM;AACJX,IAAAA,QAAQ,EAAEW,KAAK,CAACC,IAAN,CAAWhB,QADjB;AAEJE,IAAAA,eAAe,EAAEa,KAAK,CAACC,IAAN,CAAWC;AAFxB,GAAN;AAID,CALD;;AAQA,eAAerB,OAAO,CAACkB,eAAD,EAAkB,IAAlB,CAAP,CAA+BhB,IAA/B,CAAf","sourcesContent":["import React, {Component} from 'react'\nimport { Card, Icon, Image } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport classes from './Item.module.css';\n\nclass Item extends Component{\n\n  render(){\n   let newsPost = null;\n   if(this.props.FullPostLoading){\n    newsPost = <div className={classes.loader}><Loader size='large' active inline='centered' /></div>;\n  }\n  if(!this.props.FullPostLoading){\n    newsPost = ( this.props.FullPost.map((full, index)=>{\n      return (<Card key={index} fluid>\n        <Image src={full.urlToImage} wrapped ui={false} />\n        <Card.Content>\n          <Card.Header>{full.title}</Card.Header>\n          <Card.Meta>\n            <span className='date'>{new Date(full.publishedAt).toDateString()} </span>\n          </Card.Meta>\n          <Card.Description>\n            {full.content}\n          </Card.Description>\n        </Card.Content>\n        <Card.Content extra>\n          <a>\n            <Icon name='star' />\n            Add To Favorites\n          </a>\n        </Card.Content>\n      </Card>)\n    }))\n  }\n\n   return(\n    {newsPost}\n )\n}\n} \n\nconst mapStateToProps = state =>{\n  return{\n    FullPost: state.item.newsPost,\n    FullPostLoading: state.item.postloading\n  }\n}\n\n\nexport default connect(mapStateToProps, null)(Item)"]},"metadata":{},"sourceType":"module"}