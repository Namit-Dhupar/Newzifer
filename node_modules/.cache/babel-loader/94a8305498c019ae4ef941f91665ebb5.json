{"ast":null,"code":"import * as actionTypes from '../actions';\nconst initialstate = {// newsList: [],\n  // loading: false,\n  // error: ''\n};\n\nconst reducer = (state = initialstate, action) => {\n  switch (action.type) {\n    case actionTypes.FETCH_SOURCE_REQUEST:\n      return { //Copying the rest of the state in an immutable way\n        ...state,\n        loading: state.loading\n      };\n\n    case actionTypes.FETCH_SOURCE_SUCCESS:\n      return { ...state,\n        newsList: state.newsList.concat(action.payload)\n      };\n\n    case actionTypes.FETCH_SOURCE_FAILURE:\n      return { ...state,\n        loading: !state.loading,\n        error: state.error.concat(action.payload)\n      };\n\n    default:\n      break;\n  }\n\n  return state;\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/namit/React Projects/wizikey-assignment/src/store/reducers/newsList.js"],"names":["actionTypes","initialstate","reducer","state","action","type","FETCH_SOURCE_REQUEST","loading","FETCH_SOURCE_SUCCESS","newsList","concat","payload","FETCH_SOURCE_FAILURE","error"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,YAA7B;AAEA,MAAMC,YAAY,GAAG,CACjB;AACA;AACA;AAHiB,CAArB;;AAMA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAACF,YAAP,EAAqBG,MAArB,KAAgC;AAC5C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKL,WAAW,CAACM,oBAAjB;AACI,aAAM,EACF;AACD,WAAGH,KAFA;AAGFI,QAAAA,OAAO,EAAEJ,KAAK,CAACI;AAHb,OAAN;;AAKJ,SAAKP,WAAW,CAACQ,oBAAjB;AACI,aAAM,EACF,GAAGL,KADD;AAEFM,QAAAA,QAAQ,EAAEN,KAAK,CAACM,QAAN,CAAeC,MAAf,CAAsBN,MAAM,CAACO,OAA7B;AAFR,OAAN;;AAIJ,SAAKX,WAAW,CAACY,oBAAjB;AACI,aAAM,EAEF,GAAGT,KAFD;AAGFI,QAAAA,OAAO,EAAE,CAACJ,KAAK,CAACI,OAHd;AAIFM,QAAAA,KAAK,EAAEV,KAAK,CAACU,KAAN,CAAYH,MAAZ,CAAmBN,MAAM,CAACO,OAA1B;AAJL,OAAN;;AAMH;AACI;AApBT;;AAsBA,SAAOR,KAAP;AACH,CAxBD;;AA0BA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from '../actions';\n\nconst initialstate = {\n    // newsList: [],\n    // loading: false,\n    // error: ''\n}\n\nconst reducer = (state=initialstate, action) => {\n    switch(action.type){\n        case actionTypes.FETCH_SOURCE_REQUEST:\n            return{\n                //Copying the rest of the state in an immutable way\n               ...state,\n                loading: state.loading\n            }\n        case actionTypes.FETCH_SOURCE_SUCCESS:\n            return{\n                ...state,\n                newsList: state.newsList.concat(action.payload),\n            }\n        case actionTypes.FETCH_SOURCE_FAILURE:\n            return{\n                \n                ...state,\n                loading: !state.loading,\n                error: state.error.concat(action.payload)\n            }        \n         default:\n             break;        \n    }\n    return state;\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}