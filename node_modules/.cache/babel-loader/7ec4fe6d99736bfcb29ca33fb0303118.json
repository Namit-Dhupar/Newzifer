{"ast":null,"code":"var _jsxFileName = \"/home/namit/React Projects/wizikey-assignment/src/components/SourceList/Sources.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Card, Segment, Loader } from 'semantic-ui-react';\nimport classes from './Sources.module.css';\nimport * as actionCreators from '../../store/actions';\n\nclass Sources extends Component {\n  componentDidMount() {\n    this.props.onSourceLoad();\n  }\n\n  render() {\n    let newsSource = null;\n    if (this.props.dailyListLoading) newsSource = /*#__PURE__*/React.createElement(Loader, {\n      content: \"Loading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }\n    });\n\n    if (!this.props.dailyListLoading) {\n      newsSource = this.props.dailyList.map(dai => /*#__PURE__*/React.createElement(Segment, {\n        vertical: true,\n        key: dai.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.Source,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 7\n        }\n      }, dai.name)));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(Card.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 2\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 4\n      }\n    }, \"News Sources\"), newsSource, /*#__PURE__*/React.createElement(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }, \"Favorites(24)\"))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    dailyList: state.list.newsList,\n    dailyListLoading: state.list.loading // dailyItem: state.item.newsItem\n\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSourceLoad: () => dispatch(actionCreators.getsource()) //onNewsClick: () => dispatch(actionCreators.getnews() /*resultID: id*/)\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Sources);","map":{"version":3,"sources":["/home/namit/React Projects/wizikey-assignment/src/components/SourceList/Sources.js"],"names":["React","Component","connect","Card","Segment","Loader","classes","actionCreators","Sources","componentDidMount","props","onSourceLoad","render","newsSource","dailyListLoading","dailyList","map","dai","id","Source","name","mapStateToProps","state","list","newsList","loading","mapDispatchToProps","dispatch","getsource"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,EAAeC,OAAf,EAAwBC,MAAxB,QAAsC,mBAAtC;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAO,KAAKC,cAAZ,MAAgC,qBAAhC;;AAEA,MAAMC,OAAN,SAAsBP,SAAtB,CAA+B;AAE/BQ,EAAAA,iBAAiB,GAAE;AACf,SAAKC,KAAL,CAAWC,YAAX;AACH;;AAEDC,EAAAA,MAAM,GAAE;AACN,QAAIC,UAAU,GAAG,IAAjB;AACA,QAAI,KAAKH,KAAL,CAAWI,gBAAf,EACAD,UAAU,gBAAI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAd;;AACA,QAAG,CAAC,KAAKH,KAAL,CAAWI,gBAAf,EAAgC;AAC9BD,MAAAA,UAAU,GAAI,KAAKH,KAAL,CAAWK,SAAX,CAAqBC,GAArB,CAAyBC,GAAG,iBAC1C,oBAAC,OAAD;AAAS,QAAA,QAAQ,MAAjB;AAAkB,QAAA,GAAG,EAAEA,GAAG,CAACC,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAEZ,OAAO,CAACa,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACCF,GAAG,CAACG,IADL,CADF,CADc,CAAd;AAQD;;AACH,wBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEKP,UAFL,eAGG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAH,CAAT,CAHH,CADD,CADA,CADA;AAWG;;AA/B4B;;AAkC/B,MAAMQ,eAAe,GAAGC,KAAK,IAAG;AAC9B,SAAM;AACFP,IAAAA,SAAS,EAAEO,KAAK,CAACC,IAAN,CAAWC,QADpB;AAEFV,IAAAA,gBAAgB,EAAEQ,KAAK,CAACC,IAAN,CAAWE,OAF3B,CAGJ;;AAHI,GAAN;AAKD,CAND;;AAQA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAM;AACJhB,IAAAA,YAAY,EAAE,MAAMgB,QAAQ,CAACpB,cAAc,CAACqB,SAAf,EAAD,CADxB,CAEJ;;AAFI,GAAN;AAID,CALD;;AAOA,eAAe1B,OAAO,CAACmB,eAAD,EAAkBK,kBAAlB,CAAP,CAA6ClB,OAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Card, Segment, Loader } from 'semantic-ui-react';\nimport classes from './Sources.module.css';\nimport * as actionCreators from '../../store/actions';\n\nclass Sources extends Component{\n\ncomponentDidMount(){\n    this.props.onSourceLoad();\n}\n  \nrender(){\n  let newsSource = null;\n  if (this.props.dailyListLoading)\n  newsSource =  <Loader content='Loading' />;\n  if(!this.props.dailyListLoading){\n    newsSource =( this.props.dailyList.map(dai =>(      \n    <Segment vertical key={dai.id}>\n      <div className={classes.Source}>\n      {dai.name}\n      </div> \n    </Segment>\n   ))\n  );\n  }\nreturn(\n<div>\n<Card>\n <Card.Content>\n   <Card.Header>News Sources</Card.Header>\n     {newsSource}\n    <Segment><b><i>Favorites(24)</i></b></Segment>\n  </Card.Content> \n</Card>    \n</div>\n)\n  }  \n     }\n\nconst mapStateToProps = state =>{\n  return{\n      dailyList: state.list.newsList,\n      dailyListLoading: state.list.loading\n    // dailyItem: state.item.newsItem\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return{\n    onSourceLoad: () => dispatch(actionCreators.getsource())\n    //onNewsClick: () => dispatch(actionCreators.getnews() /*resultID: id*/)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Sources);\n\n"]},"metadata":{},"sourceType":"module"}