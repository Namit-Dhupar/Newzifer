{"ast":null,"code":"import * as actionTypes from '../actions';\nconst initialstate = {\n  newsList: [],\n  loading: false,\n  error: '',\n  search: '',\n  id: ''\n};\n\nconst reducer = (state = initialstate, action) => {\n  switch (action.type) {\n    case actionTypes.FETCH_SOURCE_REQUEST:\n      return { //Copying the rest of the state in an immutable way\n        ...state,\n        loading: !state.loading\n      };\n\n    case actionTypes.FETCH_SOURCE_SUCCESS:\n      return { ...state,\n        loading: !state.loading,\n        newsList: state.newsList.concat(action.payload)\n      };\n\n    case actionTypes.FETCH_SOURCE_FAILURE:\n      return { ...state,\n        error: state.error.concat(action.payload)\n      };\n\n    case actionTypes.SEARCH_SOURCE:\n      return { ...state,\n        search: action.payload\n      };\n\n    case actionTypes.GET_SOURCE_ID:\n      return { ...state,\n        id: state.id.concat(action.payload)\n      };\n\n    default:\n      break;\n  }\n\n  return state;\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/namit/React Projects/wizikey-assignment/src/store/reducers/newsList.js"],"names":["actionTypes","initialstate","newsList","loading","error","search","id","reducer","state","action","type","FETCH_SOURCE_REQUEST","FETCH_SOURCE_SUCCESS","concat","payload","FETCH_SOURCE_FAILURE","SEARCH_SOURCE","GET_SOURCE_ID"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,YAA7B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE,EADO;AAEjBC,EAAAA,OAAO,EAAE,KAFQ;AAGjBC,EAAAA,KAAK,EAAE,EAHU;AAIjBC,EAAAA,MAAM,EAAE,EAJS;AAKjBC,EAAAA,EAAE,EAAE;AALa,CAArB;;AAQA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAACP,YAAP,EAAqBQ,MAArB,KAAgC;AAC5C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKV,WAAW,CAACW,oBAAjB;AACI,aAAM,EACF;AACD,WAAGH,KAFA;AAGFL,QAAAA,OAAO,EAAE,CAACK,KAAK,CAACL;AAHd,OAAN;;AAKJ,SAAKH,WAAW,CAACY,oBAAjB;AACI,aAAM,EACF,GAAGJ,KADD;AAEFL,QAAAA,OAAO,EAAE,CAACK,KAAK,CAACL,OAFd;AAGFD,QAAAA,QAAQ,EAAEM,KAAK,CAACN,QAAN,CAAeW,MAAf,CAAsBJ,MAAM,CAACK,OAA7B;AAHR,OAAN;;AAKJ,SAAKd,WAAW,CAACe,oBAAjB;AACI,aAAM,EACF,GAAGP,KADD;AAEFJ,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYS,MAAZ,CAAmBJ,MAAM,CAACK,OAA1B;AAFL,OAAN;;AAIJ,SAAKd,WAAW,CAACgB,aAAjB;AACI,aAAM,EACF,GAAGR,KADD;AAEFH,QAAAA,MAAM,EAAEI,MAAM,CAACK;AAFb,OAAN;;AAIJ,SAAKd,WAAW,CAACiB,aAAjB;AACI,aAAM,EACF,GAAGT,KADD;AAEFF,QAAAA,EAAE,EAAEE,KAAK,CAACF,EAAN,CAASO,MAAT,CAAgBJ,MAAM,CAACK,OAAvB;AAFF,OAAN;;AAIH;AACI;AA7BT;;AA+BA,SAAON,KAAP;AACH,CAjCD;;AAmCA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from '../actions';\n\nconst initialstate = {\n    newsList: [],\n    loading: false,\n    error: '',\n    search: '',\n    id: ''\n}\n\nconst reducer = (state=initialstate, action) => {\n    switch(action.type){\n        case actionTypes.FETCH_SOURCE_REQUEST:\n            return{\n                //Copying the rest of the state in an immutable way\n               ...state,\n                loading: !state.loading\n            }\n        case actionTypes.FETCH_SOURCE_SUCCESS:\n            return{\n                ...state,\n                loading: !state.loading,\n                newsList: state.newsList.concat(action.payload)\n            }\n        case actionTypes.FETCH_SOURCE_FAILURE:\n            return{\n                ...state,\n                error: state.error.concat(action.payload)\n            }\n        case actionTypes.SEARCH_SOURCE:\n            return{\n                ...state,\n                search: action.payload\n            }\n        case actionTypes.GET_SOURCE_ID:\n            return{\n                ...state,\n                id: state.id.concat(action.payload)\n            }                \n         default:\n             break;        \n    }\n    return state;\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}